import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import mystyles from '../styles/top.module.css'
import React, { useState } from 'react'
import {saveAs}  from 'file-saver'
import axios, { AxiosResponse } from 'axios'


const Home: NextPage = () => {
  // デバッグ用表示
  // const [status, setStatus] =  useState("aaa");
  // 編集オプション
  const [plus_opt, setPlusOption] = useState(false);
  const changePlusOpt = () => {
    setPlusOption(!plus_opt);
  };

  // 編集処理
  const [file, setFile] = useState<File| null>(null);
  const handleFileImportChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if(e.target.files) setFile(e.target.files[0])
  };
  const getFileName = (contentDisposition: string) => {
    return decodeURI(contentDisposition).substring(
      contentDisposition.indexOf('filename=') + 10,//length of "filename=_"
      contentDisposition.length - 1,
    )
  };
  const handleSubmit = () => {
    let formData = new FormData();
    if(file){
      formData.append('csv_file', file);
      formData.append('plus_opt', String(plus_opt)); 
      axios.defaults.xsrfCookieName = 'csrftoken';
      axios.defaults.xsrfHeaderName = "X-CSRFTOKEN";
      // const tmp = formData.get('plus_opt');
      // setStatus("lkj" + String(tmp));
      axios.post('/api/operate', formData)
      .then((res: AxiosResponse) => {
        const blob = new Blob([res.data], {type: res.data.type});
        const fileName = getFileName(res.headers['content-disposition']);
        saveAs(blob, fileName);
      });
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>認識すり合わせ用簡易デモ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* {% csrf_token %} */}
        <div className={mystyles.myframebox}>
          {/* {status} */}
          <h1 className={mystyles.mytitle}>編集ツール</h1>
          <div>
            <p className={mystyles.mydescription}>1.選択ボタンから編集したいボタンをクリック</p>
            <input className={mystyles.mybutton} type='file' onChange={handleFileImportChange} />
            <p className={mystyles.mydescription}>2.編集方法を選択</p>
            <button className={plus_opt ? mystyles.myactivebutton : mystyles.mynegativebutton} onClick={changePlusOpt}>追加する行を行を正の値にする</button>
            <p className={mystyles.mydescription}>3.編集開始ボタンをクリック</p>
            <button className={mystyles.mybutton} onClick={handleSubmit}>編集開始</button>
          </div>
        </div>
      </main>
    </div>
  )
}


export default Home
